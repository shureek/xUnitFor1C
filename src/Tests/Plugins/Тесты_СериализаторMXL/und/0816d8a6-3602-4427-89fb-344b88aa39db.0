{3,
{42,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,1,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},0,"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0},"&НаКлиенте
Перем КонтекстЯдра;
&НаКлиенте
Перем Ожидаем;
&НаКлиенте
Перем Утверждения;

&НаКлиенте
Перем ГенераторДанных;

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин(""УтвержденияBDD"");
	Утверждения = КонтекстЯдра.Плагин(""БазовыеУтверждения"");
	ГенераторДанных = КонтекстЯдра.Плагин(""СериализаторMXL"");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	НаборТестов.НачатьГруппу(""Проверка создания простого справочника"", Истина);
	НаборТестов.Добавить(""ТестДолжен_СоздатьПростойСправочник_И_ПолучитьКоллекциюДанных"");
	НаборТестов.Добавить(""УдалитьСозданныеДанные"", , ""Удалить созданные данные"");
	
	НаборТестов.НачатьГруппу(""Проверка создания регистров сведений"", Истина);
	НаборТестов.Добавить(""ТестДолжен_СоздатьДваНабораЗаписейВРегистреСведенийЧерезНаборЗаписей"");
	НаборТестов.Добавить(""УдалитьСозданныеДанные"", , ""Удалить созданные данные"");
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_СоздатьПростойСправочник_И_ПолучитьКоллекциюДанных() Экспорт
	ТестовыеДанные = СоздатьДанные(""СозданиеПростогоСправочника"");
	
	ПроверитьСозданиеПростогоСправочника(ТестовыеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ТестДолжен_СоздатьДваНабораЗаписейВРегистреСведенийЧерезНаборЗаписей() Экспорт
	ТестовыеДанные = СоздатьДанные(""СозданиеДвухНаборовЗаписейВРегистреСведений"");

	ДобавитьВКонтекст(""ОжидаемоеКоличествоУдаленных"", 3);
	
	Утверждения.ПроверитьТип(ТестовыеДанные, ""Структура"", ""ТестовыеДанные"");
	Утверждения.ПроверитьРавенство(5, ТестовыеДанные.Количество());
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСозданныеДанные() Экспорт
	
	ТестовыеДанные = ПолучитьИзКонтекста(""ТестовыеДанные"");
	ОжидаемоеКоличествоУдаленных = ПолучитьИзКонтекста(""ОжидаемоеКоличествоУдаленных"");
	
	КоличествоУдаленных = ГенераторДанных.УдалитьСозданныеДанные(ТестовыеДанные);
	
	Утверждения.ПроверитьРавенство(ОжидаемоеКоличествоУдаленных, КоличествоУдаленных, ""ОжидаемоеКоличествоУдаленных, КоличествоУдаленных"");
КонецПроцедуры

&НаКлиенте
Функция СоздатьДанные(ИмяМакета)
	Макет = ПолучитьМакетОбработки(ИмяМакета);
	ТестовыеДанные = ГенераторДанных.СоздатьДанныеПоТабличномуДокументу(Макет);
	
	Контекст = Новый Структура;
	КонтекстЯдра.СохранитьКонтекст(Контекст);
	ДобавитьВКонтекст(""ТестовыеДанные"", ТестовыеДанные);
	ДобавитьВКонтекст(""ОжидаемоеКоличествоУдаленных"", ТестовыеДанные.Количество());
	
	Возврат ТестовыеДанные;
КонецФункции

&НаКлиенте
Процедура ДобавитьВКонтекст(Ключ, Значение)
	Контекст = КонтекстЯдра.ПолучитьКонтекст();
	Контекст.Вставить(Ключ, Значение);
	КонтекстЯдра.СохранитьКонтекст(Контекст);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИзКонтекста(Ключ)
	Контекст = КонтекстЯдра.ПолучитьКонтекст();
	Возврат Контекст[Ключ];
КонецФункции

&НаСервере
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

&НаКлиенте
Процедура ПроверитьСозданиеПростогоСправочника(Знач ТестовыеДанные)
	Утверждения.ПроверитьТип(ТестовыеДанные, ""Структура"", ""ТестовыеДанные"");
	Утверждения.ПроверитьРавенство(1, ТестовыеДанные.Количество(), ""ТестовыеДанные.Количество()"");
	
	Утверждения.ПроверитьИстину(ТестовыеДанные.Свойство(""ПростойСправочник""), ""Ожидали, что есть переменная 'ПростойСправочник'"");
	Утверждения.ПроверитьТип(ТестовыеДанные.ПростойСправочник, ""СправочникСсылка.ПростойСправочник"");
	
КонецПроцедуры",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",c303cfea-5e87-4f36-bd34-286c1fc6cc41}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}